"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/send-report";
exports.ids = ["pages/api/send-report"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsend-report&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Csend-report.js&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsend-report&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Csend-report.js&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_send_report_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages\\api\\send-report.js */ \"(api-node)/./pages/api/send-report.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_send_report_js__WEBPACK_IMPORTED_MODULE_4__]);\n_pages_api_send_report_js__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_send_report_js__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_send_report_js__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/send-report\",\n        pathname: \"/api/send-report\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_send_report_js__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    projectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/send-report\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: undefined,\n                multiZoneDraftMode: Boolean(\"false\"),\n                trustHostHeader: undefined,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/send-report\",\n                projectDir:  false || '',\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsend-report&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Csend-report.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/send-report.js":
/*!**********************************!*\
  !*** ./pages/api/send-report.js ***!
  \**********************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mysql2/promise */ \"mysql2/promise\");\n/* harmony import */ var node_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node-fetch */ \"node-fetch\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([node_fetch__WEBPACK_IMPORTED_MODULE_1__]);\nnode_fetch__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// // pages/api/send-report.js\n// import mysql from \"mysql2/promise\";\n// import fetch from \"node-fetch\";\n// /* Reuse pool between warm invocations */\n// const pool =\n//   global.__mysqlPool ??\n//   (process.env.DATABASE_URL\n//     ? mysql.createPool(process.env.DATABASE_URL)\n//     : mysql.createPool({\n//         host: process.env.MYSQL_HOST,\n//         user: process.env.MYSQL_USER,\n//         password: process.env.MYSQL_PASSWORD,\n//         database: process.env.MYSQL_DATABASE,\n//         port: Number(process.env.MYSQL_PORT || 3306),\n//         waitForConnections: true,\n//         connectionLimit: 2,\n//         queueLimit: 0,\n//       }));\n// global.__mysqlPool = pool;\n// export default async function handler(req, res) {\n//   try {\n//     // 1) Secret check: header 'x-secret-token' or query ?secret=\n//     const headerSecret =\n//       req.headers[\"x-secret-token\"] || req.headers[\"x-secret\"];\n//     const querySecret = req.query?.secret;\n//     const CRON_SECRET = process.env.CRON_SECRET;\n//     if (CRON_SECRET) {\n//       if (headerSecret !== CRON_SECRET && querySecret !== CRON_SECRET) {\n//         return res.status(401).json({ ok: false, error: \"Unauthorized\" });\n//       }\n//     }\n//     // 2) Time window (hours)\n//     const hours = Number(process.env.REPORT_WINDOW_HOURS) || 1;\n//     const since = new Date(Date.now() - hours * 3600 * 1000);\n//     // 3) Query: transaction_amount is VARCHAR -> CAST each value then SUM\n//     const sql = `\n//      SELECT\n//   SUM(CAST(lp.transaction_amount AS DECIMAL(15,2))) AS total_amount,\n//   SUBSTRING_INDEX(TRIM(m.name), ' ', 1) AS name\n// FROM live_payment lp\n// JOIN merchant m\n//   ON lp.created_merchant = m.id\n// WHERE lp.transaction_status = 'success'\n// GROUP BY name;\n//     `;\n//     const [rows] = await pool.execute(sql, [since]);\n//     // Calculate grand total across all merchants\n//     const grandTotal = rows.reduce((sum, r) => {\n//       const val = r.total_amount === null ? 0 : Number(r.total_amount);\n//       return sum + val;\n//     }, 0);\n//     // 4) Build Telegram message\n//     let message = `✅ Transaction summary (last ${hours} hour${\n//       hours > 1 ? \"s\" : \"\"\n//     }):\\n\\n`;\n//     if (!rows.length) {\n//       message += \"No successful transactions in this window.\";\n//     } else {\n//       for (const r of rows) {\n//         const amt =\n//           r.total_amount === null\n//             ? \"0.00\"\n//             : typeof r.total_amount === \"string\"\n//             ? r.total_amount\n//             : Number(r.total_amount).toFixed(2);\n//         const safeName = String(r.name || \"Unknown\").replace(/\\n/g, \" \");\n//         message += `${safeName}: ₹${amt}\\n`;\n//       }\n//       message += `\\nTotal: ₹${grandTotal.toFixed(2)}`;\n//     }\n//     // 5) Send to Telegram\n//     const BOT_TOKEN = process.env.BOT_TOKEN;\n//     const CHAT_ID = process.env.CHAT_ID;\n//     if (!BOT_TOKEN || !CHAT_ID) throw new Error(\"BOT_TOKEN or CHAT_ID missing\");\n//     const tgRes = await fetch(\n//       `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`,\n//       {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ chat_id: CHAT_ID, text: message }),\n//       }\n//     );\n//     const tgJson = await tgRes.json();\n//     if (!tgJson.ok) {\n//       console.error(\"Telegram API error:\", tgJson);\n//       return res.status(502).json({ ok: false, telegram: tgJson });\n//     }\n//     return res\n//       .status(200)\n//       .json({ ok: true, sent: true, telegram: tgJson.result });\n//   } catch (err) {\n//     console.error(\"Handler error:\", err);\n//     return res.status(500).json({ ok: false, error: err.message });\n//   }\n// }\n// pages/api/send-report.js\n\n\n/* Reuse pool between warm invocations */ const pool = global.__mysqlPool ?? (process.env.DATABASE_URL ? mysql2_promise__WEBPACK_IMPORTED_MODULE_0__.createPool(process.env.DATABASE_URL) : mysql2_promise__WEBPACK_IMPORTED_MODULE_0__.createPool({\n    host: process.env.MYSQL_HOST,\n    user: process.env.MYSQL_USER,\n    password: process.env.MYSQL_PASSWORD,\n    database: process.env.MYSQL_DATABASE,\n    port: Number(process.env.MYSQL_PORT || 3306),\n    waitForConnections: true,\n    connectionLimit: 2,\n    queueLimit: 0\n}));\nglobal.__mysqlPool = pool;\nasync function handler(req, res) {\n    try {\n        // 1) Secret check: header 'x-secret-token' or query ?secret=\n        const headerSecret = req.headers[\"x-secret-token\"] || req.headers[\"x-secret\"];\n        const querySecret = req.query?.secret;\n        const CRON_SECRET = process.env.CRON_SECRET;\n        if (CRON_SECRET) {\n            if (headerSecret !== CRON_SECRET && querySecret !== CRON_SECRET) {\n                return res.status(401).json({\n                    ok: false,\n                    error: \"Unauthorized\"\n                });\n            }\n        }\n        // 2) Time window (hours)\n        const hours = Number(process.env.REPORT_WINDOW_HOURS) || 1;\n        const since = new Date(Date.now() - hours * 3600 * 1000);\n        // 3) Query: trim merchant name to first word using SUBSTRING_INDEX\n        const sql = `\n      SELECT \n        SUM(CAST(lp.transaction_amount AS DECIMAL(15,2))) AS total_amount, \n        SUBSTRING_INDEX(TRIM(m.name), ' ', 1) AS name\n      FROM live_payment lp\n      JOIN merchant m \n        ON lp.created_merchant = m.id\n      WHERE lp.transaction_status = 'success'\n      GROUP BY name;\n    `;\n        const [rows] = await pool.execute(sql);\n        // Calculate grand total across all merchants\n        const grandTotal = rows.reduce((sum, r)=>{\n            const val = r.total_amount === null ? 0 : Number(r.total_amount);\n            return sum + val;\n        }, 0);\n        // 4) Build Telegram message with formatted amounts\n        let message = `✅ Transaction summary (last ${hours} hour${hours > 1 ? \"s\" : \"\"}):\\n\\n`;\n        if (!rows.length) {\n            message += \"No successful transactions in this window.\";\n        } else {\n            for (const r of rows){\n                const amt = r.total_amount === null ? \"0.00\" : Number(r.total_amount).toLocaleString(\"en-IN\", {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2\n                });\n                const safeName = String(r.name || \"Unknown\").replace(/\\n/g, \" \");\n                message += `${safeName}: ₹${amt}\\n`;\n            }\n            message += `\\nTotal: ₹${grandTotal.toLocaleString(\"en-IN\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2\n            })}`;\n        }\n        // 5) Send to Telegram\n        const BOT_TOKEN = process.env.BOT_TOKEN;\n        const CHAT_ID = process.env.CHAT_ID;\n        if (!BOT_TOKEN || !CHAT_ID) throw new Error(\"BOT_TOKEN or CHAT_ID missing\");\n        const tgRes = await (0,node_fetch__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                chat_id: CHAT_ID,\n                text: message\n            })\n        });\n        const tgJson = await tgRes.json();\n        if (!tgJson.ok) {\n            console.error(\"Telegram API error:\", tgJson);\n            return res.status(502).json({\n                ok: false,\n                telegram: tgJson\n            });\n        }\n        return res.status(200).json({\n            ok: true,\n            sent: true,\n            telegram: tgJson.result\n        });\n    } catch (err) {\n        console.error(\"Handler error:\", err);\n        return res.status(500).json({\n            ok: false,\n            error: err.message\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/send-report.js\n");

/***/ }),

/***/ "mysql2/promise":
/*!*********************************!*\
  !*** external "mysql2/promise" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("mysql2/promise");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "node-fetch":
/*!*****************************!*\
  !*** external "node-fetch" ***!
  \*****************************/
/***/ ((module) => {

module.exports = import("node-fetch");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsend-report&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Csend-report.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();